[{"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/index.tsx":"1","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/reportWebVitals.ts":"2","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/App.tsx":"3","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/nav-bar/NavBar.tsx":"4","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/feed-list/FeedList.tsx":"5","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/feed-item/FeedItem.tsx":"6","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/create-feed/CreateFeed.tsx":"7","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/services/axios.ts":"8","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/services/const.ts":"9","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/view-feed/ViewFeed.tsx":"10","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/delete-feed/DeleteFeed.tsx":"11","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/toast-container/ToastContiner.tsx":"12"},{"size":500,"mtime":1609119768357,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1609119768357,"results":"15","hashOfConfig":"14"},{"size":656,"mtime":1609261200975,"results":"16","hashOfConfig":"14"},{"size":322,"mtime":1609261101680,"results":"17","hashOfConfig":"14"},{"size":4137,"mtime":1609268044457,"results":"18","hashOfConfig":"14"},{"size":2078,"mtime":1609265968819,"results":"19","hashOfConfig":"14"},{"size":7072,"mtime":1609264792577,"results":"20","hashOfConfig":"14"},{"size":375,"mtime":1609266250088,"results":"21","hashOfConfig":"14"},{"size":119,"mtime":1609260414468,"results":"22","hashOfConfig":"14"},{"size":2327,"mtime":1609261438100,"results":"23","hashOfConfig":"14"},{"size":748,"mtime":1609266973499,"results":"24","hashOfConfig":"14"},{"size":625,"mtime":1609267824553,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"uqfn7s",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/index.tsx",[],["52","53"],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/reportWebVitals.ts",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/App.tsx",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/nav-bar/NavBar.tsx",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/feed-list/FeedList.tsx",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/feed-item/FeedItem.tsx",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/create-feed/CreateFeed.tsx",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/services/axios.ts",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/services/const.ts",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/view-feed/ViewFeed.tsx",["54","55"],"import { useEffect, useState } from 'react';\nimport { Card, Button, Alert } from 'react-bootstrap';\nimport RSSParser from 'rss-parser';\nimport { httpGet } from '../../services/axios';\nimport { useParams } from \"react-router-dom\";\nimport { CORS_PROXY } from '../../services/const';\n\nlet parser = new RSSParser();\n\nfunction ViewFeed() {\n    let { id } = useParams();\n    const [feedTitle, setFeedTitle]: [string, any] = useState('');\n    const [feedList, setFeedList]: [any, any] = useState([]);\n    const [show, setShow] = useState(false);\n\n    const AlertDismissibleExample = () => {\n      \n        if (show) {\n          return (\n            <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n              <Alert.Heading>Error!!</Alert.Heading>\n              <p>\n                Invalid feed or Feed url doesnot exist.\n              </p>\n            </Alert>\n          );\n        }\n        return null;\n      }\n\n    const fetchFeedDetails = (feedId) => {\n        httpGet(`feed/getFeed/${feedId}`)\n        .then((response)=>{\n            console.log(response);\n            fetchFeed(response.data.feed.url);\n        })\n        .catch((error) => {\n            console.log(error);\n            setShow(true);\n        })\n    }\n\n    const fetchFeed = (url) => {\n        parser.parseURL(CORS_PROXY + url, (err, feed) => {\n            if (err) {\n                setShow(true);\n                throw err;\n            };\n            setFeedTitle(feed.title);\n            setFeedList(feed.items);\n        })\n    }\n\n    useEffect(() => {\n        fetchFeedDetails(id);\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <AlertDismissibleExample />\n            <h1 className=\"center title\">\n                {feedTitle}\n            </h1>\n            {feedList.map((item, index) => {\n                return (\n                    <Card key={item.isoDate} className=\"my-2\">\n                        <Card.Header>{item.title}</Card.Header>\n                        <Card.Body>\n                            <div\n                            dangerouslySetInnerHTML={{\n                                __html: item.content,\n                              }}></div>\n                        </Card.Body>\n                    </Card>\n                );\n            })}\n        </div>\n    )\n}\n\nexport default ViewFeed;","/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/delete-feed/DeleteFeed.tsx",[],"/home/nitheesh/Documents/Work/js/rss-feed/rss-feed-app/src/components/toast-container/ToastContiner.tsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":16,"nodeType":"62","messageId":"63","endLine":2,"endColumn":22},{"ruleId":"64","severity":1,"message":"65","line":56,"column":8,"nodeType":"66","endLine":56,"endColumn":10,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchFeedDetails' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [fetchFeedDetails, id]",{"range":"73","text":"74"},[1581,1583],"[fetchFeedDetails, id]"]